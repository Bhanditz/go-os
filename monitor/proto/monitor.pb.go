// Code generated by protoc-gen-go.
// source: micro/go-platform/monitor/proto/monitor.proto
// DO NOT EDIT!

/*
Package monitor is a generated protocol buffer package.

It is generated from these files:
	micro/go-platform/monitor/proto/monitor.proto

It has these top-level messages:
	HealthCheck
*/
package monitor

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type HealthCheck_Status int32

const (
	HealthCheck_UNKNOWN HealthCheck_Status = 0
	HealthCheck_OK      HealthCheck_Status = 1
	HealthCheck_ERROR   HealthCheck_Status = 2
)

var HealthCheck_Status_name = map[int32]string{
	0: "UNKNOWN",
	1: "OK",
	2: "ERROR",
}
var HealthCheck_Status_value = map[string]int32{
	"UNKNOWN": 0,
	"OK":      1,
	"ERROR":   2,
}

func (x HealthCheck_Status) String() string {
	return proto.EnumName(HealthCheck_Status_name, int32(x))
}
func (HealthCheck_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type HealthCheck struct {
	Id          string               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Description string               `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Timestamp   int64                `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	Service     *HealthCheck_Service `protobuf:"bytes,4,opt,name=service" json:"service,omitempty"`
	Status      HealthCheck_Status   `protobuf:"varint,5,opt,name=status,enum=HealthCheck_Status" json:"status,omitempty"`
	Results     map[string]string    `protobuf:"bytes,6,rep,name=results" json:"results,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Error       string               `protobuf:"bytes,7,opt,name=error" json:"error,omitempty"`
}

func (m *HealthCheck) Reset()                    { *m = HealthCheck{} }
func (m *HealthCheck) String() string            { return proto.CompactTextString(m) }
func (*HealthCheck) ProtoMessage()               {}
func (*HealthCheck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HealthCheck) GetService() *HealthCheck_Service {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *HealthCheck) GetResults() map[string]string {
	if m != nil {
		return m.Results
	}
	return nil
}

type HealthCheck_Service struct {
	Name    string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	Id      string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
}

func (m *HealthCheck_Service) Reset()                    { *m = HealthCheck_Service{} }
func (m *HealthCheck_Service) String() string            { return proto.CompactTextString(m) }
func (*HealthCheck_Service) ProtoMessage()               {}
func (*HealthCheck_Service) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func init() {
	proto.RegisterType((*HealthCheck)(nil), "HealthCheck")
	proto.RegisterType((*HealthCheck_Service)(nil), "HealthCheck.Service")
	proto.RegisterEnum("HealthCheck_Status", HealthCheck_Status_name, HealthCheck_Status_value)
}

var fileDescriptor0 = []byte{
	// 293 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x50, 0xcd, 0x4a, 0xc3, 0x40,
	0x10, 0x36, 0x49, 0x9b, 0xa5, 0x93, 0xaa, 0x75, 0xeb, 0x61, 0xf5, 0x54, 0x2a, 0x42, 0x11, 0x9a,
	0x42, 0xf5, 0x20, 0x5e, 0xa5, 0x20, 0x14, 0x5a, 0x88, 0x88, 0xe7, 0x98, 0x8e, 0x76, 0x69, 0x36,
	0x1b, 0x66, 0xb7, 0x85, 0xbe, 0xa9, 0x8f, 0xe3, 0x9a, 0xb4, 0x68, 0x8e, 0xf3, 0xfd, 0xcd, 0x7c,
	0x03, 0x63, 0x25, 0x33, 0xd2, 0x93, 0x2f, 0x3d, 0x2e, 0xf3, 0xd4, 0x7e, 0x6a, 0x52, 0x13, 0xa5,
	0x0b, 0x69, 0x35, 0x4d, 0x4a, 0xd2, 0x56, 0x1f, 0xa7, 0xb8, 0x9a, 0x86, 0xdf, 0x3e, 0x44, 0x2f,
	0x98, 0xe6, 0x76, 0xfd, 0xbc, 0xc6, 0x6c, 0xc3, 0x01, 0x7c, 0xb9, 0x12, 0xde, 0xc0, 0x1b, 0x75,
	0x78, 0x1f, 0xa2, 0x15, 0x9a, 0x8c, 0x64, 0x69, 0xa5, 0x2e, 0x84, 0x5f, 0x81, 0x17, 0xd0, 0xb1,
	0x52, 0xa1, 0xb1, 0xa9, 0x2a, 0x45, 0xe0, 0xa0, 0x80, 0xdf, 0x02, 0x33, 0x48, 0x3b, 0x99, 0xa1,
	0x68, 0x39, 0x20, 0x9a, 0x5e, 0xc6, 0xff, 0x22, 0xe3, 0xd7, 0x9a, 0xe3, 0x37, 0x10, 0x3a, 0x97,
	0xdd, 0x1a, 0xd1, 0x76, 0xaa, 0xb3, 0x69, 0xbf, 0xa9, 0xaa, 0x28, 0x7e, 0x07, 0x8c, 0xd0, 0x6c,
	0x73, 0x6b, 0x44, 0x38, 0x08, 0x5c, 0xd6, 0x55, 0x43, 0x95, 0xd4, 0xdc, 0xac, 0xb0, 0xb4, 0xe7,
	0xa7, 0xd0, 0x46, 0x22, 0x4d, 0x82, 0xfd, 0x5e, 0x76, 0xfd, 0x00, 0xec, 0xb8, 0xaa, 0x0b, 0xad,
	0x22, 0x55, 0x78, 0xe8, 0x71, 0x0e, 0x6c, 0x87, 0x64, 0xfe, 0x3a, 0xd4, 0x25, 0x83, 0xca, 0x15,
	0x43, 0xb7, 0x11, 0x1a, 0x41, 0xb0, 0xc1, 0xfd, 0xc1, 0xe9, 0x36, 0xec, 0xd2, 0x7c, 0x8b, 0xb5,
	0xef, 0xc9, 0x7f, 0xf4, 0x86, 0x23, 0x08, 0x0f, 0xa7, 0x46, 0xc0, 0xde, 0x16, 0xf3, 0xc5, 0xf2,
	0x7d, 0xd1, 0x3b, 0xe1, 0x21, 0xf8, 0xcb, 0x79, 0xcf, 0xe3, 0x1d, 0x68, 0xcf, 0x92, 0x64, 0x99,
	0xf4, 0xfc, 0x8f, 0xb0, 0xfa, 0xf0, 0xfd, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0f, 0xb5, 0x3c,
	0x19, 0x92, 0x01, 0x00, 0x00,
}
